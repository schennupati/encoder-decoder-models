model:
    arch: encoder_decoder # Shared encoder and independent decoders
    encoder: resnet50 # resnet 18 and resnet34 are not supported with fpn
    decoder: fpn
    pretrained_path: /home/sumche/results
    loss_fn: uncertainty # fixed, uncertainty etc
    outputs: 
        semantic: 
            active: True
            out_channels: 19
            loss: cross_entropy2d
            loss_weight: 1.0
            metric: classification_metrics
            postproc: argmax
        instance_contour:
            active: True
            out_channels: 11
            loss: weighted_multiclass_cross_entropy
            loss_weight: 4.0
            metric: panoptic_metrics
            postproc: panoptic
        instance_regression: 
            active: False
            out_channels: 2
            loss: l1
            loss_weight: 1.0
            metric: None
            postproc: None
        instance_heatmap:
            active: False
            out_channels: 1
            loss: l1
            loss_weight: 1.0
            metric: None
            postproc: None
        instance_probs:
            active: False
            out_channels: 2
            loss: cross_entropy2d
            loss_weight: 20.0
            metric: classification_metrics
            postproc: argmax

tasks: # for dataloaders
    semantic:
        active: True
        type: long
    instance:
        active: True
        type: float
        
data:
    dataset: Cityscapes
    root_path: /home/sumche/datasets/Cityscapes
    im_size: &im_size 256
    random_scaling: &random_scaling !!python/tuple [0.5, 1.0]
    val_im_size: &val_im_size 512
    transforms:
        train:
            input:
                RandomScale: 
                    flag: False
                    scale: *random_scaling
                Resize:
                    flag: True
                    size: *val_im_size        
                RandomCrop: 
                    flag: True
                    size: *im_size
                ColorJitter: 
                    flag: False
                    brightness: 0.25
                    contrast: 0.25
                    saturation: 0.25 
                    hue: 0.25
                ToTensor:
                    flag: True
                Normalize:
                    flag: False
                    mean: [0.485, 0.456, 0.406]
                    std:  [0.229, 0.224, 0.225]
            target:
                RandomScale: 
                    flag: False
                    scale: *random_scaling
                Resize:
                    flag: True
                    size: *val_im_size        
                RandomCrop: 
                    flag: True
                    size: *im_size
                ToTensor:
                    flag: True
        val:
            input:
                Resize:
                    flag: True
                    size: *val_im_size
                ToTensor:
                    flag: True
                Normalize:
                    flag: False
                    mean: [0.485, 0.456, 0.406]
                    std:  [0.229, 0.224, 0.225]
            target:
                Resize:
                    flag: True
                    size: *val_im_size
                ToTensor:
                    flag: True
                    
params:
    savelogs: True
    train_batchsize: &train_batchsize 12
    val_batchsize: &val_batchsize 12
    n_workers: &n_workers 8
    multigpu: True
    gpu_id: 0
    print_interval: 50
    resume: True
    early_stop: True
    patience: 25
    epochs: 100
    train:
        batch_size: *train_batchsize
        shuffle: True
        n_workers: *n_workers
        optimizer:
            name: adam
            lr: 1.0e-3
            amsgrad: True
            weight_decay: 1.0e-4
    val:
        batch_size: *val_batchsize
        shuffle: True
        n_workers: *n_workers

